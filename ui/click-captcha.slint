// MIT License
//
// Copyright (c) 2024 worksoup <https://github.com/worksoup/>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

import { Button, StandardButton, VerticalBox } from "std-widgets.slint";
import { Eillpse } from "eillpse.slint";
import { SlintPoint } from "types.slint";
import { ClickCaptchaImage } from "click-captcha-image.slint";
export { ClickCaptchaWidget }


component ClickCaptchaWidget {
    in property <image> image;
    in property <int> max-points-count;
    in-out property <[SlintPoint]> points;
    callback verify-button-clicked <=> verify-button.clicked;
    callback push-point <=> show.push-point;
    callback pop-point <=> undo-button.clicked;
    callback cancel <=> cancel-button.clicked;

    VerticalBox {
        alignment: center;
        HorizontalLayout {
            alignment: center;
            show := ClickCaptchaImage {
                points: root.points;
                image: root.image;
            }
        }

        // Text {
        //     text: "\{show.current-point.x / 1px},\{show.current-point.y / 1px}";
        // }

        HorizontalLayout {
            alignment: center;
            @children
        }

        HorizontalLayout {
            alignment: end;
            spacing: 20px;
            verify-button := StandardButton {
                kind: StandardButtonKind.ok;
                enabled: points.length >= root.max-points-count;
            }

            undo-button := Button {
                text: @tr("撤销");
            }

            cancel-button := StandardButton {
                kind: StandardButtonKind.cancel;
            }
        }
    }
}
