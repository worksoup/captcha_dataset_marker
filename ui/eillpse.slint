// MIT License
//
// Copyright (c) 2024 worksoup <https://github.com/worksoup/>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

export component Eillpse inherits Path {
    property <float> a: self.width / 2px;
    property <float> b: self.height / 2px;
    property <float> a2: a * a;
    property <float> b2: b * b;
    property <float> e2: 1.0 - self.b2 / self.a2;
    property <string> cmd1: self.command(180deg);
    property <string> cmd2: self.command(360deg);
    out property <string> cmd: "M \{self.eillpse-x(0)} \{self.eillpse-y(0)} \{self.cmd1} \{self.cmd2}";
    function sin2(theta: angle) -> float {
        sin(theta) * sin(theta)
    }
    function cos2(theta: angle) -> float {
        cos(theta) * cos(theta)
    }
    function r(theta: angle) -> float {
        self.b / sqrt(1.0 - self.e2 * cos2(theta))
    }
    function eillpse-x(theta: angle) -> float {
        self.a + r(theta) * cos(theta)
    }
    function eillpse-y(theta: angle) -> float {
        self.b - r(theta) * sin(theta)
    }
    function command(end: angle) -> string {
        "A \{self.a} \{self.b} 0 0 0 \{self.eillpse-x(end)} \{self.eillpse-y(end)}"
    }
    commands: self.cmd;
}